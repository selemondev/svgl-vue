name: Update Svgl Components

on:
  schedule:
    - cron: '0 0 * * *'
  workflow_dispatch:

permissions:
  contents: write
  pull-requests: write

jobs:
  generate:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Install pnpm
        uses: pnpm/action-setup@v2
        with:
          version: 10

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: lts/*
          cache: 'pnpm'

      - name: Install dependencies
        run: pnpm i --no-frozen-lockfile

      - name: Record start time
        id: start
        run: echo "start_time=$(date +%s)" >> $GITHUB_OUTPUT

      - name: Generate Svgl Vue components
        run: pnpm generate:components

      - name: Compute and format duration
        id: duration
        run: |
          END_TIME=$(date +%s)
          DURATION=$(( END_TIME - ${{ steps.start.outputs.start_time }} ))
          MIN=$(( DURATION / 60 ))
          SEC=$(( DURATION % 60 ))
          echo "formatted=${MIN}m ${SEC}s" >> $GITHUB_OUTPUT

      - name: Count new Vue components
        id: count
        run: |
          # Check for untracked files (new components)
          COUNT=$(git ls-files --others --exclude-standard 'src/components/*.vue' | wc -l)
          echo "total=$COUNT" >> $GITHUB_OUTPUT

      - name: Check if changes exist
        id: changes
        run: |
          if git diff --quiet && [ $(git ls-files --others --exclude-standard | wc -l) -eq 0 ]; then
            echo "has_changes=false" >> $GITHUB_OUTPUT
          else
            echo "has_changes=true" >> $GITHUB_OUTPUT
          fi

      - name: Skip if no components found
        if: steps.changes.outputs.has_changes == 'false' || steps.count.outputs.total == '0'
        run: |
          echo "No new components found."
          exit 0

      - name: Get list of added component names
        if: steps.changes.outputs.has_changes == 'true' && steps.count.outputs.total != '0'
        id: list
        run: |
          FILES=$(git ls-files --others --exclude-standard 'src/components/*.vue')
          {
            echo "names<<EOF"
            for f in $FILES; do
              basename "$f" .vue
            done
            echo "EOF"
          } >> $GITHUB_OUTPUT

      - name: Format component list for commit
        if: steps.changes.outputs.has_changes == 'true' && steps.count.outputs.total != '0'
        id: pretty
        run: |
          {
            echo "formatted<<EOF"
            echo "${{ steps.list.outputs.names }}" | while read -r component; do
              echo "- $component"
            done
            echo "EOF"
          } >> $GITHUB_OUTPUT

      - name: Reset lockfile changes
        if: steps.changes.outputs.has_changes == 'true'
        run: git checkout -- pnpm-lock.yaml

      - name: Create Pull Request
        if: steps.changes.outputs.has_changes == 'true' && steps.count.outputs.total != '0'
        uses: peter-evans/create-pull-request@v7
        with:
          branch: update-svgl-vue-components
          branch-suffix: timestamp
          base: main
          title: 'chore: update svgl vue components (added ${{ steps.count.outputs.total }} new components, took ${{ steps.duration.outputs.formatted }})'
          body: |
            ## Updated Svgl Vue Component(s)

            Added **${{ steps.count.outputs.total }}** new components:
            ${{ steps.pretty.outputs.formatted }}

            Generation time: ${{ steps.duration.outputs.formatted }}
          commit-message: |
            chore: update svgl vue components

            Added ${{ steps.count.outputs.total }} new components:
            ${{ steps.pretty.outputs.formatted }}

            Generation time: ${{ steps.duration.outputs.formatted }}
          delete-branch: true
          token: ${{ secrets.GITHUB_TOKEN }}
